{"version":3,"file":"static/js/879.a84cf96d.chunk.js","mappings":"oJAUA,IANqB,SAAC,GAA0B,IAAzBA,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAE7B,OADAC,QAAQC,IAAIH,EAAUC,IAElB,SAAC,KAAD,CAAMG,GAAIJ,EAAV,SAAqBC,GAE5B,C,uGCDKI,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,IAAI,IAAIC,WAC3BC,MAAOL,EAAAA,KAAaK,QAAQD,WAC5BE,SAAUN,EAAAA,KAAaI,aAsDzB,UAnDqB,WACnB,IAAMG,GAAWC,EAAAA,EAAAA,MAajB,OACE,4BACA,wBAAI,aACJ,SAAC,KAAD,CACEC,cAAe,CACbP,KAAM,GACNG,MAAO,GACPC,SAAU,IAEZI,iBAAkBX,EAClBY,SArBiB,SAAC,EAAD,GAAiD,IAA7CT,EAA4C,EAA5CA,KAAMG,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,SAAcM,EAAiB,EAAjBA,UAClDL,GACEM,EAAAA,EAAAA,IAAS,CACPX,KAAAA,EACAG,MAAAA,EACAC,SAAAA,KAGJM,GACD,EAKC,UASE,UAAC,KAAD,CAAME,aAAa,MAAnB,WACE,kBAAOC,QAAQ,OAAf,SAAsB,UACtB,SAAC,KAAD,CAAOC,GAAG,OAAOd,KAAK,OAAOe,YAAY,kBAAmBC,MAAO,CAACC,QAAS,YAC7E,SAAC,KAAD,CAAcD,MAAO,CAACE,MAAO,OAAQC,UAAU,IAAInB,KAAK,UACxD,kBAAOa,QAAQ,QAAf,SAAuB,WACvB,SAAC,KAAD,CACEC,GAAG,QACHd,KAAK,QACLe,YAAY,cACZK,KAAK,QACLJ,MAAO,CAACC,QAAS,YAEnB,SAAC,KAAD,CAAcD,MAAO,CAACE,MAAO,OAAQC,UAAU,IAAInB,KAAK,WACxD,kBAAOa,QAAQ,WAAf,SAA0B,cAC1B,SAAC,KAAD,CAAOC,GAAG,WAAWd,KAAK,WAAWoB,KAAK,WAAWL,YAAY,iBACjEC,MAAO,CAACC,QAAS,YACjB,SAAC,KAAD,CAAcD,MAAO,CAACE,MAAO,OAAQC,UAAU,IAAInB,KAAK,cACxD,mBAAQoB,KAAK,SAAb,SAAsB,kBAG1B,SAAC,IAAD,CAAc5B,SAAU,SAAUC,SAAU,aAG/C,C","sources":["components/User/AuthNavigate/AuthNavigate.js","pages/RegisterPage/Register.js"],"sourcesContent":["// import {style} from 'components/User/AuthNavigate/AuthNavigate.module.css';\nimport { Link } from 'react-router-dom';\n\n\nconst AuthNavigate = ({authLink, linkText}) => {\n    console.log(authLink, linkText)\n    return (\n        <Link to={authLink}>{linkText}</Link>\n    )\n}\nexport default AuthNavigate;","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/Auth/operations';\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport AuthNavigate from 'components/User/AuthNavigate/AuthNavigate';\n\n\nconst schema = yup.object().shape({\n  name: yup.string().max(16).required(),\n  email: yup.string().email().required(),\n  password: yup.string().required(),\n})\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = ( { name, email, password }, { resetForm } ) => {\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n      })\n    );\n    resetForm();\n  }\n\n  return (\n    <div>\n    <h1>Sign Up</h1>\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete='off'>\n        <label htmlFor=\"name\">Name</label>\n        <Field id=\"name\" name=\"name\" placeholder=\"Enter your name\"  style={{display: 'block'}} />\n        <ErrorMessage style={{color: 'red'}} component=\"p\" name=\"name\" />\n        <label htmlFor=\"email\">Email</label>\n        <Field\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"Enter email\"\n          type=\"email\"\n          style={{display: 'block'}}\n        />\n        <ErrorMessage style={{color: 'red'}} component=\"p\" name=\"email\" />\n        <label htmlFor=\"password\">Password</label>\n        <Field id=\"password\" name=\"password\" type=\"password\" placeholder=\"Enter password\" \n        style={{display: 'block'}} />\n        <ErrorMessage style={{color: 'red'}} component=\"p\" name=\"password\" />\n        <button type=\"submit\">Sign Up</button>\n      </Form>\n    </Formik>\n    <AuthNavigate authLink={'/login'} linkText={'Log In'} />\n  </div>\n  )\n};\n\nexport default RegisterPage;"],"names":["authLink","linkText","console","log","to","schema","yup","shape","name","max","required","email","password","dispatch","useDispatch","initialValues","validationSchema","onSubmit","resetForm","register","autoComplete","htmlFor","id","placeholder","style","display","color","component","type"],"sourceRoot":""}