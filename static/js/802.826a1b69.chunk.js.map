{"version":3,"file":"static/js/802.826a1b69.chunk.js","mappings":"4MACA,EAAgC,gCAAhC,EAA2E,2BAA3E,EAAwH,kCAAxH,EAAyK,+BAAzK,EAAyN,iCAAzN,EAA2Q,iCAA3Q,EAAkU,sCAAlU,EAA4X,oCAA5X,EAAqb,qCAArb,EAAse,4BAAte,EAA8gB,4BAA9gB,EAAsjB,4B,SCGhjBA,EAAaC,EAAAA,KAAaC,MAAM,CACpCC,KAAMF,EAAAA,KACHG,IAAI,GAAI,+BACRC,SAAS,yBACZC,MAAOL,EAAAA,KACJK,MAAM,kBACND,SAAS,2BACZE,SAAUN,EAAAA,KAAWO,WACrBC,MAAOR,EAAAA,KACJS,QAAQ,eAAgB,0CACxBF,WACHG,MAAOV,EAAAA,KAAaG,IAAI,GAAI,+BAA+BI,aAGvDI,EAAe,SAAAC,GACnBC,QAAQC,IAAIF,EACb,EAmGD,EAjGiB,WASf,OACE,0BACE,SAAC,KAAD,CACEG,cAXgB,CACpBb,KAAM,GACNI,SAAU,GACVD,MAAO,GACPG,MAAO,GACPE,MAAO,IAOHM,SAAUL,EACVM,iBAAkBlB,EAHpB,UAKE,iBAAKmB,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,kBAAOC,QAAQ,gBACf,gBAAKF,UAAWC,IAAwB,QAE1C,eAAID,UAAWC,EAAf,SAAmC,gBACnC,cAAGD,UAAWC,EAAd,SAAkC,UAElC,UAAC,KAAD,CAAMD,UAAWC,EAAjB,WACE,iBAAKD,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,kBAAOD,UAAWC,EAAeC,QAAQ,OAAzC,SAAgD,eAGhD,SAAC,KAAD,CACEF,UAAWC,EACXE,KAAK,OACLnB,KAAK,OACLoB,GAAG,OACHC,YAAY,qBAEd,SAAC,KAAD,CAAcrB,KAAK,OAAOsB,UAAU,SAEpC,kBAAON,UAAWC,EAAeC,QAAQ,WAAzC,SAAoD,cAGpD,SAAC,KAAD,CACEF,UAAWC,EACXE,KAAK,OACLnB,KAAK,WACLoB,GAAG,WACHC,YAAY,yBAGd,kBAAOL,UAAWC,EAAeC,QAAQ,QAAzC,SAAiD,WAGjD,SAAC,KAAD,CACEF,UAAWC,EACXE,KAAK,QACLnB,KAAK,QACLoB,GAAG,QACHC,YAAY,wBAIhB,iBAAKL,UAAWC,EAAhB,WACE,kBAAOD,UAAWC,EAAeC,QAAQ,OAAzC,SAAgD,WAGhD,SAAC,KAAD,CACEF,UAAWC,EACXE,KAAK,MACLnB,KAAK,QACLoB,GAAG,QACHC,YAAY,UAGd,kBAAOL,UAAWC,EAAeC,QAAQ,QAAzC,SAAiD,WAGjD,SAAC,KAAD,CACEF,UAAWC,EACXE,KAAK,OACLnB,KAAK,QACLoB,GAAG,QACHC,YAAY,4BAKlB,mBAAQL,UAAWC,EAAeE,KAAK,SAAvC,SAAgD,0BAQ3D,E,wCC7FD,EAjBoB,WAClB,IAAMI,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,GAAY,gBACtB,GAAE,CAACH,IAEJ,OAAeI,EAAAA,EAAAA,MAARC,GAAP,eAGA,OAFAjB,QAAQC,IAAIgB,IAGV,gBAAKZ,UAAU,cAAf,UACE,SAAC,EAAD,KAGL,C","sources":["webpack://project-5-frontend/./src/components/UserForm/UserForm.module.css?24f4","components/UserForm/UserForm.jsx","pages/AccountPage/AccountPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userContainer\":\"UserForm_userContainer__IaCpu\",\"userForm\":\"UserForm_userForm__bdjR0\",\"avatarContainer\":\"UserForm_avatarContainer__Lz5Hn\",\"plusInBorder\":\"UserForm_plusInBorder__TQenP\",\"avatarUserName\":\"UserForm_avatarUserName__v0jQ4\",\"avatarUserType\":\"UserForm_avatarUserType__TR-vD\",\"inputPrimaryWrapper\":\"UserForm_inputPrimaryWrapper__FbIph\",\"inputFirstWrapper\":\"UserForm_inputFirstWrapper__rkQjk\",\"inputSecondWrapper\":\"UserForm_inputSecondWrapper__v0vOo\",\"userLabel\":\"UserForm_userLabel__Fc13w\",\"userInput\":\"UserForm_userInput__whN+t\",\"submitBtn\":\"UserForm_submitBtn__jiWiq\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport css from './UserForm.module.css';\n\nconst userSchema = Yup.object().shape({\n  name: Yup.string()\n    .max(15, 'Length must be less then 15')\n    .required('Your name is required'),\n  email: Yup.string()\n    .email('Invalid e-mail')\n    .required('Your e-mail is required'),\n  birthday: Yup.date().nullable(),\n  phone: Yup.string()\n    .matches(/^\\+380\\d{9}$/, 'Enter your phone number in format +380')\n    .nullable(),\n  skype: Yup.string().max(16, 'Length must be less then 16').nullable(),\n});\n\nconst handleSubmit = values => {\n  console.log(values);\n};\n\nconst UserForm = () => {\n  const initialValues = {\n    name: '',\n    birthday: '',\n    email: '',\n    phone: '',\n    skype: '',\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={userSchema}\n      >\n        <div className={css.userContainer}>\n          <div className={css.avatarContainer}>\n            <label htmlFor=\"userImgUrl\"></label>\n            <div className={css.plusInBorder}></div>A\n          </div>\n          <h2 className={css.avatarUserName}>Nadiia Doe</h2>\n          <p className={css.avatarUserType}>User</p>\n\n          <Form className={css.userForm}>\n            <div className={css.inputPrimaryWrapper}>\n              <div className={css.inputFirstWrapper}>\n                <label className={css.userLabel} htmlFor=\"name\">\n                  User Name\n                </label>\n                <Field\n                  className={css.userInput}\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                ></Field>\n                <ErrorMessage name=\"name\" component=\"div\" />\n\n                <label className={css.userLabel} htmlFor=\"birthday\">\n                  Birthday\n                </label>\n                <Field\n                  className={css.userInput}\n                  type=\"text\"\n                  name=\"birthday\"\n                  id=\"birthday\"\n                  placeholder=\"Enter your birthday\"\n                ></Field>\n\n                <label className={css.userLabel} htmlFor=\"email\">\n                  Email\n                </label>\n                <Field\n                  className={css.userInput}\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  placeholder=\"Enter your name\"\n                ></Field>\n              </div>\n\n              <div className={css.inputSecondWrapper}>\n                <label className={css.userLabel} htmlFor=\"name\">\n                  Phone\n                </label>\n                <Field\n                  className={css.userInput}\n                  type=\"tel\"\n                  name=\"phone\"\n                  id=\"phone\"\n                  placeholder=\"+380\"\n                ></Field>\n\n                <label className={css.userLabel} htmlFor=\"skype\">\n                  Skype\n                </label>\n                <Field\n                  className={css.userInput}\n                  type=\"text\"\n                  name=\"skype\"\n                  id=\"skype\"\n                  placeholder=\"Enter your Skype\"\n                ></Field>\n              </div>\n            </div>\n\n            <button className={css.submitBtn} type=\"submit\">\n              Save Changes\n            </button>\n          </Form>\n        </div>\n      </Formik>\n    </div>\n  );\n};\n\nexport default UserForm;\n","import UserForm from '../../components/UserForm/UserForm';\n\nimport { useOutletContext } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { currentPage } from 'redux/actions';\n\nconst AccountPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(currentPage('User Profile'));\n  }, [dispatch]);\n  \n  const [user] = useOutletContext();\n  console.log(user); // ТУТ ВСЯ ІНФА ПРО ЮЗЕРА, ЯКЩО ТРЕБА\n\n  return (\n    <div className=\"accountPage\">\n      <UserForm />\n    </div>\n  );\n};\n\nexport default AccountPage;\n"],"names":["userSchema","Yup","shape","name","max","required","email","birthday","nullable","phone","matches","skype","handleSubmit","values","console","log","initialValues","onSubmit","validationSchema","className","css","htmlFor","type","id","placeholder","component","dispatch","useDispatch","useEffect","currentPage","useOutletContext","user"],"sourceRoot":""}